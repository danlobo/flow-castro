{"version":3,"file":"deepMerge.js","sources":["../../../../src/util/deepMerge.js"],"sourcesContent":["export const deepMerge = (target, ...sources) => {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        deepMerge(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n\n  return deepMerge(target, ...sources);\n}\n\nfunction isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}"],"names":["deepMerge","target","_len","arguments","length","sources","Array","_key","source","shift","isObject","key","Object","assign","item","isArray"],"mappings":";;IAAaA,SAAS,GAAG,SAAZA,SAASA,CAAIC,MAAM,EAAiB;EAAA,KAAAC,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAZC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAK,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA,EAAA;AAAPF,IAAAA,OAAO,CAAAE,IAAA,GAAAJ,CAAAA,CAAAA,GAAAA,SAAA,CAAAI,IAAA,CAAA,CAAA;AAAA,GAAA;AAC1C,EAAA,IAAI,CAACF,OAAO,CAACD,MAAM,EAAE,OAAOH,MAAM,CAAA;AAClC,EAAA,IAAMO,MAAM,GAAGH,OAAO,CAACI,KAAK,EAAE,CAAA;EAE9B,IAAIC,QAAQ,CAACT,MAAM,CAAC,IAAIS,QAAQ,CAACF,MAAM,CAAC,EAAE;AACxC,IAAA,KAAK,IAAMG,GAAG,IAAIH,MAAM,EAAE;AACxB,MAAA,IAAIE,QAAQ,CAACF,MAAM,CAACG,GAAG,CAAC,CAAC,EAAE;QACzB,IAAI,CAACV,MAAM,CAACU,GAAG,CAAC,EAAEC,MAAM,CAACC,MAAM,CAACZ,MAAM,EAAE;UAAE,CAACU,GAAG,GAAG,EAAC;AAAE,SAAC,CAAC,CAAA;QACtDX,SAAS,CAACC,MAAM,CAACU,GAAG,CAAC,EAAEH,MAAM,CAACG,GAAG,CAAC,CAAC,CAAA;AACrC,OAAC,MAAM;AACLC,QAAAA,MAAM,CAACC,MAAM,CAACZ,MAAM,EAAE;AAAE,UAAA,CAACU,GAAG,GAAGH,MAAM,CAACG,GAAG,CAAA;AAAE,SAAC,CAAC,CAAA;AAC/C,OAAA;AACF,KAAA;AACF,GAAA;AAEA,EAAA,OAAOX,SAAS,CAACC,MAAM,EAAE,GAAGI,OAAO,CAAC,CAAA;AACtC,EAAC;AAED,SAASK,QAAQA,CAACI,IAAI,EAAE;AACtB,EAAA,OAAQA,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACR,KAAK,CAACS,OAAO,CAACD,IAAI,CAAC,CAAA;AAClE;;;;"}