{"version":3,"file":"Node.js","sources":["../../../src/Node.jsx"],"sourcesContent":["import { memo, useCallback, useEffect, useRef } from 'react';\nimport NodePort from './NodePort.jsx';\nimport { useScreenContext } from './ScreenContext.jsx';\n\nfunction Node({ \n  name, \n  portTypes,\n  nodeType,\n  value,\n  onChangePosition, \n  onConnect, \n  containerRef, \n  onContextMenu,\n  onResize,\n  onValueChange\n}) {\n  const nodeRef = useRef()\n  useEffect(() => {\n    const currentRef = nodeRef.current\n    const observer = new ResizeObserver((entries) => {\n      onResize({ width: entries[0].contentRect.width, height: entries[0].contentRect.height })\n    })\n    observer.observe(currentRef)\n\n    return () => {\n      observer.unobserve(currentRef)\n    }\n  }, [])\n\n  const {\n    id: nodeId,\n    name: nodeName,\n    position: nodePosition, \n    values: nodeValues\n  } = value\n\n  useEffect(() => {\n    if (nodeId == null)\n      throw new Error('Node id is required')\n\n      if (name == null)\n      throw new Error('Node name is required')\n\n    if (name !== nodeName) {\n      console.warn('Node name mismatch', name, nodeName)\n    }  \n  }, [name, nodeName, nodeId])\n\n  const { scale: screenScale } = useScreenContext()\n\n  const handleMouseDown = (event) => {\n    // event.preventDefault();\n    event.stopPropagation();\n\n    const startX = event.pageX;\n    const startY = event.pageY;\n\n    const handleMouseMove = (event) => {\n      const dx = event.pageX - startX;\n      const dy = event.pageY - startY;\n\n      onChangePosition({ x: nodePosition.x + dx / screenScale, y: nodePosition.y + dy / screenScale });\n    };\n\n    const handleMouseUp = () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  const onOutputPortConnected = useCallback(({ source, target }) => {\n    console.log('onOutputPortConnected', { source, target })\n    onConnect?.({ source, target })\n  }, [onConnect])\n\n  const onInputPortConnected = useCallback(({ source, target }) => {\n    console.log('onInputPortConnected', { source, target })\n    onConnect?.({ source: target, target: source })\n  }, [onConnect])\n\n\n  const handleResolveClick = useCallback((e) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const resolvedValue = nodeType?.resolve?.(nodeValues)\n    console.log('resolvedValue', resolvedValue)\n  }, [name, nodeValues, nodeType])\n\n  return <div\n    ref={nodeRef}\n    id={`card-${name}`}\n    key={`card-${name}`}\n    className=\"node\"\n    style={{\n      transform: `translate(${nodePosition.x}px, ${nodePosition.y}px)`,\n    }}\n    onMouseDown={handleMouseDown}\n    onContextMenu={onContextMenu}\n  >\n    <div style={{ padding: '0 1rem' }}>\n        <h3>{name}</h3>\n    </div>\n        \n    {/* <img\n      className=\"zoom-and-pan-image\"\n      src=\"https://picsum.photos/300/200\"\n      alt=\"Example\"\n    /> */}\n\n    <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n      <div style={{ \n        width: '100%', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'flex-end',\n        gap: '1rem'\n      }}>\n        {nodeType?.inputs?.map((input) => {\n          return <NodePort \n            name={input.name}\n            value={nodeValues[input.name]}\n            onValueChange={(v1) => {\n              onValueChange?.({\n                ...value,\n                values: {\n                  ...value.values,\n                  [input.name]: v1,\n                }\n              })\n            }}\n            nodeId={nodeId}\n            key={input.name} \n            type={portTypes[input.type]}\n            direction=\"input\" \n            label={input.label}\n            containerRef={containerRef}\n            isConnected={value.connections?.inputs?.some((c) => c.name === input.name)}\n            onConnected={onInputPortConnected}\n          />\n        })}\n      </div>\n      <div style={{ \n        width: '100%', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'flex-start',\n        gap: '1rem'\n      }}>\n        {nodeType?.outputs?.map((output) => {\n          return <NodePort\n            name={output.name}\n            nodeId={nodeId}\n            key={output.name}\n            type={portTypes[output.type]}\n            direction=\"output\"\n            label={output.label}\n            containerRef={containerRef}\n            isConnected={value.connections?.outputs?.some((c) => c.name === output.name)}\n            onConnected={onOutputPortConnected}\n          />\n        })}\n      </div>\n\n      <div>\n        <button onClick={handleResolveClick}>\n          Resolve\n        </button>\n      </div>\n    </div>\n\n  </div>\n}\n\nexport default  memo(Node);"],"names":["Node","_ref","_nodeType$inputs","_nodeType$outputs","name","portTypes","nodeType","value","onChangePosition","onConnect","containerRef","onContextMenu","onResize","onValueChange","nodeRef","useRef","useEffect","currentRef","current","observer","ResizeObserver","entries","width","contentRect","height","observe","unobserve","id","nodeId","nodeName","position","nodePosition","values","nodeValues","Error","console","warn","scale","screenScale","useScreenContext","handleMouseDown","event","stopPropagation","startX","pageX","startY","pageY","handleMouseMove","dx","dy","x","y","handleMouseUp","window","removeEventListener","addEventListener","onOutputPortConnected","useCallback","_ref2","source","target","log","onInputPortConnected","_ref3","handleResolveClick","e","_nodeType$resolve","preventDefault","resolvedValue","resolve","call","_jsxs","ref","concat","className","style","transform","onMouseDown","children","_jsx","padding","display","flexDirection","alignItems","gap","inputs","map","input","_value$connections","_value$connections$in","NodePort","v1","_objectSpread","type","direction","label","isConnected","connections","some","c","onConnected","outputs","output","_value$connections2","_value$connections2$o","onClick","memo"],"mappings":"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"}