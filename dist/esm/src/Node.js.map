{"version":3,"file":"Node.js","sources":["../../../src/Node.jsx"],"sourcesContent":["import { memo, useCallback, useEffect, useMemo, useRef } from 'react';\nimport NodePort from './NodePort.jsx';\nimport { useScreenContext } from './ScreenContext.jsx';\nimport css from './Node.module.css'\nimport { useTheme } from './ThemeProvider.js';\nimport Button from './Button.jsx';\n\nfunction Node({ \n  name, \n  portTypes,\n  nodeType,\n  value,\n  canMove,\n  onChangePosition,\n  onDragEnd,\n  onConnect, \n  containerRef, \n  onContextMenu,\n  onResize,\n  onValueChange\n}) {\n  const { currentTheme } = useTheme()\n\n  const nodeRef = useRef()\n  useEffect(() => {\n    const currentRef = nodeRef.current\n    const observer = new ResizeObserver((entries) => {\n      onResize({ width: entries[0].contentRect.width, height: entries[0].contentRect.height })\n    })\n    observer.observe(currentRef)\n\n    return () => {\n      observer.unobserve(currentRef)\n    }\n  }, [])\n\n  const {\n    id: nodeId,\n    name: nodeName,\n    position: nodePosition, \n    values: nodeValues\n  } = value\n\n  useEffect(() => {\n    if (nodeId == null)\n      throw new Error('Node id is required')\n\n      if (name == null)\n      throw new Error('Node name is required')\n\n    if (name !== nodeName) {\n      console.warn('Node name mismatch', name, nodeName)\n    }  \n  }, [name, nodeName, nodeId])\n\n  const { scale: screenScale } = useScreenContext()\n\n  const handleMouseDown = useCallback((event) => {\n    if (!canMove) return\n\n    // event.preventDefault();\n    event.stopPropagation();\n\n    const startX = event.pageX;\n    const startY = event.pageY;\n\n    const handleMouseMove = (event) => {\n      const dx = event.pageX - startX;\n      const dy = event.pageY - startY;\n\n      onChangePosition({ x: nodePosition.x + dx / screenScale, y: nodePosition.y + dy / screenScale });\n    };\n\n    const handleMouseUp = (e) => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      const dx = e.pageX - startX;\n      const dy = e.pageY - startY;\n\n      if (Math.abs(dx) >= 2 && Math.abs(dy) >= 2) {\n        onDragEnd?.({ x: nodePosition.x + dx / screenScale, y: nodePosition.y + dy / screenScale });\n      }\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  }, [nodePosition, screenScale, onChangePosition, onDragEnd]);\n\n  const onOutputPortConnected = useCallback(({ source, target }) => {\n    onConnect?.({ source, target })\n  }, [onConnect])\n\n  const onInputPortConnected = useCallback(({ source, target }) => {\n    onConnect?.({ source: target, target: source })\n  }, [onConnect])\n\n  const nodeInputs = useMemo(() => {\n    if (typeof nodeType.inputs === 'function')\n      return nodeType.inputs(nodeValues)\n    return nodeType.inputs\n  }, [nodeType, nodeValues]);\n\n  const nodeOutputs = useMemo(() => {\n    if (typeof nodeType.outputs === 'function')\n      return nodeType.outputs(nodeValues)\n    return nodeType.outputs\n  }, [nodeType, nodeValues]);\n\n  return <div\n    ref={nodeRef}\n    id={`card-${name}`}\n    key={`card-${name}`}\n    className={css.node}\n    style={{\n      backgroundColor: currentTheme?.nodes?.[nodeType?.type]?.body?.background ?? currentTheme?.nodes?.common?.body?.background,\n      border: currentTheme?.nodes?.[nodeType?.type]?.body?.border ?? currentTheme?.nodes?.common?.body?.border,\n      color: currentTheme?.nodes?.[nodeType?.type]?.body?.color ?? currentTheme?.nodes?.common?.body?.color,\n      transform: `translate(${nodePosition.x}px, ${nodePosition.y}px)`,\n      cursor: canMove ? 'grab' : null\n    }}\n    onMouseDown={handleMouseDown}\n    onContextMenu={onContextMenu}\n  >\n    <div className={css.title} style={{\n      backgroundColor: currentTheme?.nodes?.[nodeType?.type]?.background ?? currentTheme?.nodes?.common?.title?.background,\n      color: currentTheme?.nodes?.[nodeType?.type]?.color ?? currentTheme?.nodes?.common?.title?.color,\n    }}>\n        <h3>{name}</h3>\n    </div>\n\n    <div className={css.container}>\n      <div className={[css.portsContainer, css.inputPortsContainer].join(' ')}>\n        {nodeInputs?.map((input) => {\n          return <NodePort \n            name={input.name}\n            value={nodeValues[input.name]}\n            onValueChange={(v1) => {\n              onValueChange?.({\n                ...value,\n                values: {\n                  ...value.values,\n                  [input.name]: v1,\n                }\n              })\n            }}\n            nodeId={nodeId}\n            key={input.name} \n            type={portTypes[input.type]}\n            direction=\"input\" \n            label={input.label}\n            hidePort={Boolean(input.hidePort)}\n            containerRef={containerRef}\n            isConnected={value.connections?.inputs?.some((c) => c.name === input.name)}\n            onConnected={onInputPortConnected}\n            canMove={canMove}\n          />\n        })}\n      </div>\n      <div className={[css.portsContainer, css.outputPortsContainer].join(' ')}>\n        {nodeOutputs?.map((output) => {\n          return <NodePort\n            name={output.name}\n            nodeId={nodeId}\n            key={output.name}\n            type={portTypes[output.type]}\n            direction=\"output\"\n            label={output.label}\n            containerRef={containerRef}\n            isConnected={value.connections?.outputs?.some((c) => c.name === output.name)}\n            onConnected={onOutputPortConnected}\n            canMove={canMove}\n          />\n        })}\n      </div>\n    </div>\n  </div>\n}\n\nexport default  memo(Node);"],"names":["Node","_ref","_currentTheme$nodes$n","_currentTheme$nodes","_currentTheme$nodes2","_currentTheme$nodes$n2","_currentTheme$nodes3","_currentTheme$nodes4","_currentTheme$nodes$n3","_currentTheme$nodes5","_currentTheme$nodes6","_currentTheme$nodes$n4","_currentTheme$nodes7","_currentTheme$nodes8","_currentTheme$nodes$n5","_currentTheme$nodes9","_currentTheme$nodes10","name","portTypes","nodeType","value","canMove","onChangePosition","onDragEnd","onConnect","containerRef","onContextMenu","onResize","onValueChange","currentTheme","useTheme","nodeRef","useRef","useEffect","currentRef","current","observer","ResizeObserver","entries","width","contentRect","height","observe","unobserve","id","nodeId","nodeName","position","nodePosition","values","nodeValues","Error","console","warn","scale","screenScale","useScreenContext","handleMouseDown","useCallback","event","stopPropagation","startX","pageX","startY","pageY","handleMouseMove","dx","dy","x","y","handleMouseUp","e","window","removeEventListener","Math","abs","addEventListener","onOutputPortConnected","_ref2","source","target","onInputPortConnected","_ref3","nodeInputs","useMemo","inputs","nodeOutputs","outputs","_jsxs","ref","concat","className","css","node","style","backgroundColor","nodes","type","body","background","common","border","color","transform","cursor","onMouseDown","children","_jsx","title","container","portsContainer","inputPortsContainer","join","map","input","_value$connections","NodePort","v1","_objectSpread","direction","label","hidePort","Boolean","isConnected","connections","some","c","onConnected","outputPortsContainer","output","_value$connections2","memo"],"mappings":"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"}