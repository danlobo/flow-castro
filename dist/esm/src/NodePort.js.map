{"version":3,"file":"NodePort.js","sources":["../../../src/NodePort.jsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDragContext } from './DragContext.jsx';\nimport { useScreenContext } from './ScreenContext.jsx';\n\nconst globalToLocal = (globalX, globalY, translate, scale) => {\n  const localX = (globalX) / scale;\n  const localY = (globalY) / scale;\n  return { x: localX, y: localY };\n};\n\nfunction NodePort({ \n    name, \n    type, \n    nodeId,\n    label, \n    onConnected, \n    isConnected, \n    direction, \n    value,\n    onValueChange\n  }) {\n  const { position: screenPosition, scale: screenScale } = useScreenContext()\n  const { dragInfo, setDragInfo } = useDragContext()\n\n  const [internalValue, setInternalValue] = useState(value)\n\n  const shapeStyles = useMemo(() => ({\n    circle: {\n      borderRadius: '50%',\n    },\n    square: {\n      borderRadius: '0%',\n    },\n    diamond: {\n      borderRadius: '0%',\n      transform: 'rotate(45deg)',\n    },\n  }), [])\n\n  useEffect(() => {\n    if (!name)\n      throw new Error('Port name is required')\n  }, [name])\n\n  useEffect(() => {\n  }, [internalValue])\n\n  useEffect(() => {\n    if (isConnected) {\n      onValueChange?.(null)\n    }\n  }, [isConnected])\n\n  const containerRef = useRef(null)\n  const connectorRef = useRef(null)\n\n  const handleUpdateForm = useCallback((e) => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    console.log('handleUpdateForm', internalValue)\n\n    onValueChange?.(internalValue)\n  }, [internalValue])\n\n  const connectorRect = useRef()\n  useEffect(() => {\n    if (!connectorRef.current) return\n    connectorRect.current = connectorRef.current.getBoundingClientRect()\n  }, [connectorRef.current])\n  \n  const containerRect = useRef()\n  useEffect(() => {\n    if (!containerRef.current) return\n    containerRect.current = containerRef.current.getBoundingClientRect()\n  }, [containerRef.current])\n\n  const [pointerPos, setPointerPos] = useState({ x: 0, y: 0 })\n  \n  const handleMouseDown = (event) => {\n    //event.preventDefault();\n    event.stopPropagation();\n\n    const nodePos = containerRef.current.getBoundingClientRect()\n    const localPos = globalToLocal(event.pageX - nodePos.left, event.pageY - nodePos.top, screenPosition, screenScale);\n    \n    const connectorRect = connectorRef.current.getBoundingClientRect()\n\n    const _dragInfo = {\n      type: 'connector',\n      nodeId,\n      portName: name,\n      portType: type,\n      startX: connectorRect.left,\n      startY: connectorRect.top,\n    }\n\n    setDragInfo(_dragInfo)\n\n    const handleMouseMove = (event) => {\n      if (!_dragInfo) return\n\n      if (_dragInfo.type !== 'connector') return\n\n      const localPos = globalToLocal(event.pageX - nodePos.left, event.pageY - nodePos.top, screenPosition, screenScale);\n      setPointerPos({ x: localPos.x, y: localPos.y })\n    }\n\n    const handleMouseUp = (e) => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setDragInfo(null)\n      if (!_dragInfo) return\n\n      const targets = document.elementsFromPoint(e.pageX - window.scrollX, e.pageY - window.scrollY);\n      const target = targets.find(t => t.classList?.contains('port-overlay') && t.dataset.portDirection.toString() !== direction.toString() && t.dataset.portType.toString() === type.type?.toString())\n      \n      console.log('targets', targets)\n      console.log('target', target)\n      console.log('dragInfo', _dragInfo)\n\n      if (target) {\n       onConnected?.({ source: { nodeId, portName: name }, target: { nodeId: target.dataset.nodeId, portName: target.dataset.portName } });\n      }\n    }\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n  };\n\n  return (\n    <div ref={containerRef} style={{ \n        position: 'relative', \n        width: '100%',\n        minHeight: '20px'\n      }} \n      className=\"port\"\n      onMouseDown={handleMouseDown}\n    >\n      <div style={{\n        position: 'absolute',\n        top: 0,\n        left: direction === 'input' ? '-20px' : 0,\n        right: direction === 'output' ? '-20px' : 0,\n        width: '100%',\n        height: '100%',\n        zIndex: 2000,\n        // borderRadius: '4px',\n        // backgroundColor: 'rgba(0,0,0,0.1)',\n        padding: '0 15px',\n        borderTopLeftRadius: direction === 'input' ? '15px' : null,\n        borderBottomLeftRadius: direction === 'input' ? '15px' : null,\n        borderTopRightRadius: direction === 'output' ? '15px' : null,\n        borderBottomRightRadius: direction === 'output' ? '15px' : null,\n      }} \n      className=\"port-overlay\" \n      id={`card-${nodeId}-${direction}-${name}-overlay`}\n      data-port-name={name}\n      data-port-type={type.type}\n      data-port-direction={direction}\n      data-node-id={nodeId}\n      >\n      </div>\n        \n      <div style={{ fontSize: '10px', display: 'flex', justifyContent: direction === 'input' ? 'flex-start' : 'flex-end' }}>\n        <span>{label}</span>\n      </div>\n      <div \n        style={{ position: 'relative', zIndex: 3000, width: '100%' }} \n        onBlur={handleUpdateForm}\n        onMouseDown={(e) => {\n          e.stopPropagation();\n        }}\n        >\n        {direction === 'input' && !isConnected ? type.render({ value: internalValue, onChange: setInternalValue }) : null}\n      </div>\n      <div \n        id={`card-${nodeId}-${direction}-${name}`}\n        ref={connectorRef}\n        style={{\n          width: '10px',\n          height: '10px',\n          background: type.color,\n          border: isConnected ? '2px solid #fff' : '2px solid #000',\n          cursor: 'pointer',\n          position: 'absolute',\n          left: direction === 'input' ? '-15px' : null,\n          right: direction === 'output' ? '-15px' : null,\n          top: 'calc(50% - 5px)',\n          ...(shapeStyles[type?.shape ?? 'circle'] ?? {})\n        }}\n        className='port-connector'\n      />\n    </div>\n  );\n}\n\nexport default memo(NodePort);\n"],"names":["globalToLocal","globalX","globalY","translate","scale","localX","localY","x","y","NodePort","_ref","_shapeStyles","_type$shape","name","type","nodeId","label","onConnected","isConnected","direction","value","onValueChange","position","screenPosition","screenScale","useScreenContext","dragInfo","setDragInfo","useDragContext","internalValue","setInternalValue","useState","shapeStyles","useMemo","circle","borderRadius","square","diamond","transform","useEffect","Error","containerRef","useRef","connectorRef","handleUpdateForm","useCallback","e","preventDefault","stopPropagation","console","log","connectorRect","current","getBoundingClientRect","containerRect","pointerPos","setPointerPos","handleMouseDown","event","nodePos","pageX","left","pageY","top","_dragInfo","portName","portType","startX","startY","handleMouseMove","localPos","handleMouseUp","window","removeEventListener","targets","document","elementsFromPoint","scrollX","scrollY","target","find","t","_t$classList","_type$type","classList","contains","dataset","portDirection","toString","source","addEventListener","_jsxs","ref","style","width","minHeight","className","onMouseDown","children","_jsx","right","height","zIndex","padding","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","id","concat","fontSize","display","justifyContent","onBlur","render","onChange","_objectSpread","background","color","border","cursor","shape","memo"],"mappings":"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"}